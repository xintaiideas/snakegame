myEclipse
面向对象设计的贪吃蛇
1.找类和对象
    a.Snake类  蛇类
    b.Food类   食物类
    c.Ground类  障碍物类
    d.GamePanel 面板类 显示 蛇、食物、障碍物。
2.找类的方法（把想到的先写出来)
   2.1 Snake类
        move() 移动
        eatFood(Food food)//吃食物
        changeDirection();//改变方向
        drawMe();//画出自己
          谁拥有数据谁拥有方法
          数据放在食物，障碍物里面
        蛇是否碰到自己、是否碰到食物、是否碰到障碍物
   2.2 Food类
       isEatBySnake(Snake snake)
       drawMe()
  2.3Ground类
      isEatBySnake(Snake snake)
      drawMe
  2.4GamePanel 显示蛇、食物和障碍物
      display方法
      重写paintComponent---repaint()
      
      
3.控制器Controller
  3.1其实贪吃蛇游戏,就是控制Snake,Food,GroundPanel
  包与包相互联系用导入这个包来操作
  专门用控制器来控制这四个对象---->作为成员并通过构造函数初始化
   3.2控制器要能够控制蛇的移动主要是方向的改变
        我们在操作的时候是通过键盘事件来控制，
        键盘事件由键盘监听器控制，那么我们的控制器首先
        需要是键盘的监听器
        所以我们让Controller继承KeyAdapter重写keyPressed方法
   3.3 蛇每次移动都应该判断蛇是否碰到了自己、障碍物，食物等
        我们可以自己写一个监听器来监听这三件事
        写一个接口SnakeListener
        
        蛇就需要有添加这个监听器的方法，接收这个监听器的成员
        给Snake添加成员和方法
        
   3.4 控制器也要蛇的监听器，能够监听
        蛇是否碰到自己、食物、障碍物
         所有让Controller实现该接口
 4. 主装游戏
 public static void main()
 {String[] args}中创建所有类对象
      4.1创建所有类的对象
      4.2控制器可以控制游戏的开始
           添加startGame();--->就是让蛇start()跑起来
      4.3在snake中添加start方法启动蛇的移动
          start方法的实现启动一个线程让蛇不停的移动
      4.4 创建一个线程SnakeDriver
      
      4.5给蛇添加监听器/面板添加键盘事件监听器
      
      4.5创建窗体，添加面板，启动游戏，显示界面
 总结：通过前面的4步，把架子已经搭好，面向对象的设计已经完成
           采用的是mvc的方案，接下来具体实现
 5.具体实现
    5.1 用什么数据结构来存储蛇身
          Snake最重要的动作是蛇的移动
          去掉尾巴加头，去掉尾巴加头
          蛇如移动（火车拉的方式、去尾加头的方式）
          所以数据结构选择LinkedList链表 （arraylist数组）
         那么LinkedList容纳什么类型呢，是矩形好呢还是点好
         （因为蛇头走过的地方，蛇身都会经过)
         我们用Point（矩形的左上角坐标,每个方块的宽度、高度固定）
         将来也方便判断是否碰到食物、障碍物、自己
         给蛇添加成员
     5.2 贪吃蛇完成后，蛇身就是几个方块组成的
          我们可以把直接把面板划分 行列各多少个格子组成即可
          定义辅助类Global
          
          （x格子，y格子）-- ->真的坐标是
              （x*格子的宽度，y*格子的高度)
     5.3 初始化蛇身
           格子中间开始横向三个格子作为初始蛇身
           Snake类的init方法中完成
           画出蛇身 完成drawMe方法
     5.4完成蛇的移动move方法
         去尾巴加头的方式
         去完成方向的操作
         修正反方向的问题
         默认方向是向
         在一秒钟之内按下下和左结果反方向向右移动
         边界的问题（穿透)
     5.5 完成食物的操作
          食物就是一个格子，格子的宽度和高度已经定义完成是固定的
          这样的就由左上角坐标来决定
          左上角坐标就是一个点
          可以让食物类直接继承Point类
          设置食物出现的位置
          控制器而言，游戏开始时，不旦有让蛇移动还应该出现食物
          
          吃食物、把去掉的尾巴加回来即可
          什么时候吃食物--->当蛇头碰到食物的时候
     5.6完成障碍物

  
